{
  parserClass="com.gman.idea.plugin.concordion.lang.ConcordionParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Concordion"
  psiImplClassSuffix="Impl"
  psiPackage="com.gman.idea.plugin.concordion.lang.psi"
  psiImplPackage="com.gman.idea.plugin.concordion.lang.psi"

  elementTypeHolderClass="com.gman.idea.plugin.concordion.lang.psi.ConcordionTypes"
  elementTypeClass="com.gman.idea.plugin.concordion.lang.ConcordionElementType"
  tokenTypeClass="com.gman.idea.plugin.concordion.lang.ConcordionTokenType"

  tokens = [
    LPARENTH="("
    RPARENTH=")"
    COMA=","
    HASH="#"
  ]
}

simpleFile ::= expression*

expression ::= literal|method|property|variable

literal ::= (STRING_LITERAL|CHARACTER_LITERAL|DOUBLE_LITERAL|INTEGER_LITERAL)
method ::= IDENTIFIER '(' arguments ')'
property ::= IDENTIFIER
variable ::= '#' IDENTIFIER

arguments ::= expression? (',' expression)*
