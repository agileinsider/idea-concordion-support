buildscript {
    repositories {
        maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
    }
}

plugins {
    id 'org.jetbrains.intellij' version '0.1.6'
    id 'net.saliman.cobertura' version '2.3.1'
}

apply plugin: 'java'
apply plugin: 'org.jetbrains.intellij'
apply plugin: 'net.saliman.cobertura'

group 'org.concordion.plugin.idea'
version '0.9'

sourceCompatibility = 1.8
targetCompatibility = 1.8

wrapper {
    gradleVersion = '2.12'
}

repositories {
    mavenLocal()
    mavenCentral()
}

intellij {
    pluginName 'IdeaConcordionSupport'
    plugins = ['junit', 'properties', 'Groovy', 'org.intellij.scala:3.0.6']
    version '2016.1.3'
//    sandboxDirectory "$projectDir/idea-sandbox"
    downloadSources false
    updateSinceUntilBuild false
}

ext {
    markdownSupportPlugin = files(
            "${projectDir}/markdownSupport/lib/markdown.jar",
            "${projectDir}/markdownSupport/lib/markdown-javafx-preview.jar",
            "${projectDir}/markdownSupport/lib/intellij-markdown.jar",
            "${projectDir}/markdownSupport/lib/Loboevolution.jar"
    )
    markdownPlugin = files(
            "${projectDir}/markdown/lib/asm-4.1-repacked.jar",
            "${projectDir}/markdown/lib/asm-analysis-4.1-repacked.jar",
            "${projectDir}/markdown/lib/asm-tree-4.1-repacked.jar",
            "${projectDir}/markdown/lib/asm-util-4.1-repacked.jar",
            "${projectDir}/markdown/lib/idea-markdown-repacked.jar",
            "${projectDir}/markdown/lib/parboiled-core-1.1.6-repacked.jar",
            "${projectDir}/markdown/lib/parboiled-java-1.1.6-repacked.jar",
            "${projectDir}/markdown/lib/pegdown-1.4.2-repacked.jar"
    )
}

configurations {
    compileWith
}

sourceSets {
    main.compileClasspath += configurations.compileWith

    main.java.srcDirs = ['gen', 'src']
    main.resources.srcDirs = ['resources']
    test.java.srcDirs = ['tests']

    testMd.java.srcDirs = ['tests', 'testsMd']
    testMd.compileClasspath += sourceSets.test.compileClasspath
}

dependencies {
    compileWith markdownSupportPlugin
    compileWith markdownPlugin

    testCompile 'org.assertj:assertj-core:3.1.0'
    testCompile 'org.mockito:mockito-all:1.10.19'
}

task testMarkdownSupportIntegration(type: Test) {
    classpath += markdownSupportPlugin
    classpath += sourceSets.testMd.compileClasspath
    classpath += sourceSets.testMd.runtimeClasspath
    testClassesDir = sourceSets.testMd.output.classesDir
}

task testMarkdownIntegration(type: Test) {
    classpath += markdownPlugin
    classpath += sourceSets.testMd.compileClasspath
    classpath += sourceSets.testMd.runtimeClasspath
    testClassesDir = sourceSets.testMd.output.classesDir
}

check.dependsOn testMarkdownSupportIntegration
check.dependsOn testMarkdownIntegration